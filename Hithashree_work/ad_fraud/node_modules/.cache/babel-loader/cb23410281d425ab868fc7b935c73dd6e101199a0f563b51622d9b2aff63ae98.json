{"ast":null,"code":"let totalBehaviour = []; // includes move + clicks\nlet mousemoveTimes = []; // timestamps of each move\nlet mousemoveTotalBehaviour = []; // (x, y) positions\nconst sessionId = crypto.randomUUID(); // unique session ID\n\nlet startTime = Date.now();\ndocument.addEventListener(\"mousemove\", e => {\n  const now = Date.now();\n  const timeElapsed = now - startTime;\n  const point = {\n    x: e.clientX,\n    y: e.clientY\n  };\n  totalBehaviour.push(`m(${e.clientX},${e.clientY})`);\n  mousemoveTotalBehaviour.push(point);\n  mousemoveTimes.push(timeElapsed);\n});\n[\"click\", \"contextmenu\", \"auxclick\"].forEach(eventType => {\n  document.addEventListener(eventType, e => {\n    const now = Date.now();\n    const clickType = eventType === \"click\" ? \"l\" : eventType === \"contextmenu\" ? \"r\" : \"m\";\n    totalBehaviour.push(`c(${clickType})`);\n    mousemoveTimes.push(now - startTime);\n  });\n});\nfunction logVisit() {\n  window.addEventListener(\"beforeunload\", () => {\n    fetch(\"http://localhost:5000/log-visit\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        session_id: sessionId,\n        total_behaviour: totalBehaviour,\n        mousemove_times: mousemoveTimes,\n        mousemove_total_behaviour: mousemoveTotalBehaviour\n      })\n    }).catch(err => {\n      console.error(\"Tracking failed\", err);\n    });\n  });\n}\nexport { logVisit };","map":{"version":3,"names":["totalBehaviour","mousemoveTimes","mousemoveTotalBehaviour","sessionId","crypto","randomUUID","startTime","Date","now","document","addEventListener","e","timeElapsed","point","x","clientX","y","clientY","push","forEach","eventType","clickType","logVisit","window","fetch","method","headers","body","JSON","stringify","session_id","total_behaviour","mousemove_times","mousemove_total_behaviour","catch","err","console","error"],"sources":["C:/Users/hitha/Desktop/adfraud_kpmg/ad_fraud/src/clickceaseTracker.js"],"sourcesContent":["let totalBehaviour = []; // includes move + clicks\r\nlet mousemoveTimes = []; // timestamps of each move\r\nlet mousemoveTotalBehaviour = []; // (x, y) positions\r\nconst sessionId = crypto.randomUUID(); // unique session ID\r\n\r\nlet startTime = Date.now();\r\n\r\ndocument.addEventListener(\"mousemove\", (e) => {\r\n  const now = Date.now();\r\n  const timeElapsed = now - startTime;\r\n  const point = { x: e.clientX, y: e.clientY };\r\n\r\n  totalBehaviour.push(`m(${e.clientX},${e.clientY})`);\r\n  mousemoveTotalBehaviour.push(point);\r\n  mousemoveTimes.push(timeElapsed);\r\n});\r\n\r\n[\"click\", \"contextmenu\", \"auxclick\"].forEach((eventType) => {\r\n  document.addEventListener(eventType, (e) => {\r\n    const now = Date.now();\r\n    const clickType = eventType === \"click\" ? \"l\" : eventType === \"contextmenu\" ? \"r\" : \"m\";\r\n    totalBehaviour.push(`c(${clickType})`);\r\n    mousemoveTimes.push(now - startTime);\r\n  });\r\n});\r\n\r\nfunction logVisit() {\r\n  window.addEventListener(\"beforeunload\", () => {\r\n    fetch(\"http://localhost:5000/log-visit\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        session_id: sessionId,\r\n        total_behaviour: totalBehaviour,\r\n        mousemove_times: mousemoveTimes,\r\n        mousemove_total_behaviour: mousemoveTotalBehaviour\r\n      }),\r\n    }).catch((err) => {\r\n      console.error(\"Tracking failed\", err);\r\n    });\r\n  });\r\n}\r\n\r\nexport { logVisit };\r\n"],"mappings":"AAAA,IAAIA,cAAc,GAAG,EAAE,CAAC,CAAC;AACzB,IAAIC,cAAc,GAAG,EAAE,CAAC,CAAC;AACzB,IAAIC,uBAAuB,GAAG,EAAE,CAAC,CAAC;AAClC,MAAMC,SAAS,GAAGC,MAAM,CAACC,UAAU,CAAC,CAAC,CAAC,CAAC;;AAEvC,IAAIC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;AAE1BC,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAGC,CAAC,IAAK;EAC5C,MAAMH,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;EACtB,MAAMI,WAAW,GAAGJ,GAAG,GAAGF,SAAS;EACnC,MAAMO,KAAK,GAAG;IAAEC,CAAC,EAAEH,CAAC,CAACI,OAAO;IAAEC,CAAC,EAAEL,CAAC,CAACM;EAAQ,CAAC;EAE5CjB,cAAc,CAACkB,IAAI,CAAC,KAAKP,CAAC,CAACI,OAAO,IAAIJ,CAAC,CAACM,OAAO,GAAG,CAAC;EACnDf,uBAAuB,CAACgB,IAAI,CAACL,KAAK,CAAC;EACnCZ,cAAc,CAACiB,IAAI,CAACN,WAAW,CAAC;AAClC,CAAC,CAAC;AAEF,CAAC,OAAO,EAAE,aAAa,EAAE,UAAU,CAAC,CAACO,OAAO,CAAEC,SAAS,IAAK;EAC1DX,QAAQ,CAACC,gBAAgB,CAACU,SAAS,EAAGT,CAAC,IAAK;IAC1C,MAAMH,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;IACtB,MAAMa,SAAS,GAAGD,SAAS,KAAK,OAAO,GAAG,GAAG,GAAGA,SAAS,KAAK,aAAa,GAAG,GAAG,GAAG,GAAG;IACvFpB,cAAc,CAACkB,IAAI,CAAC,KAAKG,SAAS,GAAG,CAAC;IACtCpB,cAAc,CAACiB,IAAI,CAACV,GAAG,GAAGF,SAAS,CAAC;EACtC,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF,SAASgB,QAAQA,CAAA,EAAG;EAClBC,MAAM,CAACb,gBAAgB,CAAC,cAAc,EAAE,MAAM;IAC5Cc,KAAK,CAAC,iCAAiC,EAAE;MACvCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,UAAU,EAAE3B,SAAS;QACrB4B,eAAe,EAAE/B,cAAc;QAC/BgC,eAAe,EAAE/B,cAAc;QAC/BgC,yBAAyB,EAAE/B;MAC7B,CAAC;IACH,CAAC,CAAC,CAACgC,KAAK,CAAEC,GAAG,IAAK;MAChBC,OAAO,CAACC,KAAK,CAAC,iBAAiB,EAAEF,GAAG,CAAC;IACvC,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AAEA,SAASb,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}